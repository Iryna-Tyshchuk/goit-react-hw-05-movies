{"version":3,"file":"static/js/387.64e95cbc.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,+FACzBC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHkB,SAORK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,uBAErBG,GAT6B,cAOzBI,EAPyB,OAWvBC,EAASD,EAATC,KAXuB,kBAYxBA,EAAKC,SAZmB,2CAAH,qDAejBC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BR,EAAe,CACnBC,OAAQ,CACNC,QAASJ,EACTU,MAAAA,IAJ4B,SAQTL,EAAAA,EAAAA,IAAA,UAAaN,EAAb,gBAAqCG,GAR5B,cAQ1BI,EAR0B,OASxBC,EAASD,EAATC,KATwB,kBAUzBA,EAAKC,SAVoB,2CAAH,sDAalBG,EAAc,mCAAG,WAAMC,GAAN,yFACTP,EAAAA,EAAAA,IAAA,UACdN,EADc,iBACGa,EADH,oBACsBZ,IAFb,cACtBa,EADsB,OAIpBN,EAASM,EAATN,KAJoB,kBAKrBA,GALqB,2CAAH,sDAOdO,EAAe,mCAAG,WAAMF,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,iBACDa,EADC,4BAC0BZ,IAFpB,cACvBM,EADuB,OAIrBC,EAASD,EAATC,KAJqB,kBAKtBA,EAAKQ,MALiB,2CAAH,sDAQfC,EAAe,mCAAG,WAAMJ,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAClBN,EADkB,iBACDa,EADC,4BAC0BZ,IAFpB,cACvBM,EADuB,OAIrBC,EAASD,EAATC,KAJqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,kHCD5B,UA1CgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAiBR,OAhBAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfL,GAAW,GAFI,UAGIL,EAAAA,EAAAA,IAAgBJ,GAHpB,OAGTL,EAHS,OAIfY,EAAWZ,GACXgB,EAAS,MALM,gDAOfA,EAAS,KAAMI,SAPA,yBASfN,GAAW,GATI,4EAAH,qDAYhBK,GACD,GAAE,CAACd,KAGF,2BACsB,IAAnBM,EAAQU,QACP,qDAEA,wBACGV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,uCAAeD,EAAf,QACA,gCAAQC,OAFDF,EAKZ,MAGM,OAAVR,IAAkB,iEAAyCA,KAC3DF,IAAW,SAAC,IAAD,MAGjB,C","sources":["api/movie-service.js","views/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '56d4ceaf5914372ad31f8531463bd1af';\n\nexport const getTrendingMovies = async () => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/week`,\n    searchParams\n  );\n  const { data } = response;\n  return data.results;\n};\n\nexport const searchFilmsByQuery = async query => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n  };\n\n  const response = await axios.get(`${BASE_URL}search/movie`, searchParams);\n  const { data } = response;\n  return data.results;\n};\n\nexport const getMovieDetail = async movieId => {\n  const film = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  const { data } = film;\n  return data;\n};\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const { data } = response;\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const { data } = response;\n  return data.results;\n};\n","import { getMovieReviews } from 'api/movie-service';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length === 0 ? (\n        <p>Sorry we haven't reviews</p>\n      ) : (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <span>Author: {author} </span>\n                <span> {content}</span>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {error !== null && <p>Oops, some error occured... Message: {error}</p>}\n      {loading && <Loader />}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","searchParams","params","api_key","axios","response","data","results","searchFilmsByQuery","query","getMovieDetail","movieId","film","getMovieCredits","cast","getMovieReviews","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","useEffect","getReviews","message","length","map","id","author","content"],"sourceRoot":""}